{"version":3,"sources":["components/CovidRules.tsx","components/Nav.tsx","contex/CovidReducer.tsx","contex/CovidContex.tsx","components/CovidHistory.tsx","components/CovidCountry.tsx","components/CovidStatistics.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CovidRules","document","title","className","Nav","src","alt","onClick","window","open","exact","to","state","action","type","statistics","payload","history","countries","statisticsSearched","initialState","CovidContex","createContext","CovidContexProvider","props","useReducer","CovidReducer","dispatch","fetchData","url","a","fetch","then","response","json","data","toUpperCase","catch","err","Error","Provider","value","searchStatistic","searchValue","statisticSearchedPayload","filter","element","country","children","CovidHistory","CovidCountry","useContext","useState","undefined","selectedDay","setSelectedDay","useEffect","length","scrollTo","top","left","behavior","day","toLowerCase","continent","cases","active","critical","new","recovered","total","deaths","tests","selectedDays","onDayClick","selected","toISOString","slice","showOutsideDays","map","index","key","time","style","fontSize","CovidStatistics","topCountries","sort","b","onSubmit","e","preventDefault","Autocomplete","onChange","newValue","id","options","getOptionLabel","option","width","renderInput","params","TextField","label","variant","color","App","path","component","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.9b21a1d2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport default function CovidRules() {\r\n\r\n\r\n  document.title='Covid Rules';\r\n  \r\n  return (\r\n    <section className=\"covidRules_background-back flex-grow p-4 flex flex-col justify-center items-center \">\r\n      <h1 className=\"stroke-black-3 text-shadow font-merienda text-center text-bold text-3xl sm:text-6xl text-teal-800\">Follow these simpy rules</h1>\r\n      <div className=\"covidRules_background  m-4 h-full w-full\"  />\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nexport default function Nav() {\r\n  return (\r\n    <nav className=\"nav_background sticky top-0 flex flex-wrap p-2 items-center z-50  justify-center sm:justify-between bg-teal-200 border-b-4 border-black\">\r\n      <img className=\"cursor-pointer absolute sm:relative m-2 sm:m-0 top-0 left-0 w-16 sm:w-24\" src=\"https://cdn.pixabay.com/photo/2020/04/19/07/02/coronavirus-5062149_960_720.png\" alt=\"logo\" onClick={()=>window.open('https://rapidapi.com/api-sports/api/covid-193?endpoint=apiendpoint_dfb9e52d-bd90-48ec-a571-8b78610a736d')} />\r\n      <ul className=\"flex flex-wrap justify-evenly text-white text-3xl sm:text-5xl font-bold font-merienda gap-4 sm:gap-6 mt-24 sm:mt-0 \">\r\n        <li className=\"transform transition duration-200 hover:scale-110 \">\r\n          <NavLink className=\"stroke-black\" exact to=\"/statistics\">Statistics</NavLink>\r\n        </li>\r\n        <li className=\"transform transition duration-200 hover:scale-110\">\r\n          <NavLink className=\"stroke-black\" exact to=\"/history\">History</NavLink>\r\n        </li>\r\n        <li className=\"transform transition duration-200 hover:scale-110\">\r\n          <NavLink className=\"stroke-black\" exact to=\"/\">Rules</NavLink>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n","import { IStatistics, IAction } from './Interfaces'\r\n;\r\n\r\nexport default (state: IStatistics, action: IAction) => {\r\n  switch (action.type) {\r\n\r\n    case 'FETCH_DATA_STATISTICS':\r\n      return { ...state, statistics: action.payload };\r\n    case 'FETCH_DATA_HISTORY':\r\n      return { ...state, history: action.payload };\r\n    case 'FETCH_DATA_COUNTRIES':\r\n      return { ...state, countries: action.payload };\r\n    case 'SEARCH_STATISTIC':\r\n      return { ...state, statisticsSearched: action.payload };\r\n  \r\n      \r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from 'react';\r\nimport CovidReducer from './CovidReducer';\r\nimport { IStatistic } from './Interfaces';\r\n\r\n\r\nconst initialState = {\r\n  statistics:[],\r\n  statisticsSearched:[],\r\n  history:[],\r\n  countries:[]\r\n};\r\n\r\nexport const CovidContex = createContext<any>(initialState);\r\n\r\nexport function CovidContexProvider(props: any) {\r\n  const [state, dispatch] = useReducer(CovidReducer, initialState);\r\n\r\n\r\n  const fetchData = async (type: string, url: string) =>{\r\n    fetch(`https://covid-193.p.rapidapi.com/${url}`, {\r\n      'method': 'GET',\r\n      'headers': {\r\n        'x-rapidapi-host': 'covid-193.p.rapidapi.com',\r\n        'x-rapidapi-key': '6d779c3a64msh68f29d725ac0d62p12432djsn3f7fd0d27613'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => dispatch({\r\n        type:`FETCH_DATA_${type.toUpperCase()}`,\r\n        payload: data.response\r\n      }))\r\n      .catch(err => {\r\n        throw new Error(err);\r\n      });\r\n  };\r\n\r\n  const searchStatistic = (searchValue: string) =>{\r\n    const statisticSearchedPayload = state.statistics.filter((element: IStatistic)=> (\r\n      element.country===searchValue\r\n    ));\r\n    dispatch({\r\n      type:'SEARCH_STATISTIC',\r\n      payload:statisticSearchedPayload\r\n    });\r\n  };\r\n\r\n  return (\r\n    <CovidContex.Provider value={{ statistics: state.statistics, statisticsSearched: state.statisticsSearched, countries: state.countries, history: state.history, fetchData, searchStatistic }}>\r\n      {props.children}\r\n    </CovidContex.Provider>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function CovidHistory() {\r\n  document.title='Covid History';\r\n  return (\r\n    <section className=\"flex-grow covidHistory_background\">History</section>\r\n  );\r\n}\r\n","import React, { SetStateAction, useContext, useEffect, useState } from 'react';\r\nimport NavigationRoundedIcon from '@material-ui/icons/NavigationRounded';\r\nimport DayPicker from 'react-day-picker';\r\nimport { CovidContex } from '../contex/CovidContex';\r\nimport 'react-day-picker/lib/style.css';\r\nimport { IStatistic } from '../contex/Interfaces';\r\n\r\nexport default function CovidCountry(statisticsSearched: IStatistic) {\r\n  const { history, fetchData } = useContext(CovidContex);\r\n  const [selectedDay, setSelectedDay] = useState(undefined);\r\n  document.title=`Covid Statistics ${statisticsSearched.country}`;\r\n\r\n  useEffect(() => {\r\n    if (history.length===0 || history[0].country !== statisticsSearched.country ){\r\n      window.scrollTo({\r\n        top: 0,\r\n        left: 0,\r\n        behavior: 'smooth'\r\n      });\r\n      fetchData('history', `history?day=${statisticsSearched.day}&country=${statisticsSearched.country.toLowerCase()}`);\r\n    }\r\n  });\r\n\r\n  const handleDayClick = (day: SetStateAction<any>, { selected }: SetStateAction<any> ) => {\r\n    if (day.toISOString().slice(0, 10)>statisticsSearched.day){\r\n      return;\r\n    }\r\n    setSelectedDay(selected ? undefined : day);\r\n    fetchData('history', `history?day=${day.toISOString().slice(0, 10)}&country=${statisticsSearched.country.toLowerCase()}`);\r\n  \r\n  };\r\n\r\n  // console.log(statisticsSearched);\r\n\r\n  return (\r\n    <section className=\"flex flex-col bg-purple-100 bg-opacity-25 border-4 border-black rounded-lg text-white text-3xl sm:m-8 w-full \">\r\n      <header className=\"flex flex-col sm:flex-row gap-4 stroke-black text-shadow m-2 justify-center items-center text-center border-b-4 border-black\">\r\n        <h2>Continent: <strong className=\"text-5xl\">{statisticsSearched.continent}</strong></h2>\r\n        <h1>Country: <strong className=\"text-5xl\">{statisticsSearched.country}</strong></h1>\r\n      </header>\r\n      <div className=\"flex flex-col m-2 items-center justify-center flex-wrap sm:flex-row gap-4 border-b-4 border-black\">\r\n        <ul className=\"flex flex-col sm:flex-row   stroke-black text-shadow  gap-4 p-2 m-2 justify-center sm:justify-evenly text-center \">\r\n          <li>\r\n            <h3 className=\"font-bold italic\">Cases:</h3>\r\n            <ul>\r\n              <li>\r\n                Active: <strong className=\"text-3xl\"> {statisticsSearched.cases.active}</strong>\r\n              </li>\r\n              <li>\r\n                Critical: <strong className=\"text-3xl\">{statisticsSearched.cases.critical}</strong> \r\n              </li>\r\n              <li>\r\n                New: <strong className=\"text-3xl\"> {statisticsSearched.cases.new}</strong>\r\n              </li>\r\n              <li>\r\n                Recovered: <strong className=\"text-3xl\">{statisticsSearched.cases.recovered}</strong>\r\n              </li>\r\n              <li>\r\n                Total: <strong className=\"text-3xl\">{statisticsSearched.cases.total}</strong>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <h3 className=\"font-bold italic\">Deaths:</h3>\r\n            <ul>\r\n              <li>\r\n                New: <strong className=\"text-3xl\"> {statisticsSearched.deaths.new}</strong>\r\n              </li>\r\n              <li>\r\n                Total: <strong className=\"text-3xl\"> {statisticsSearched.deaths.total}</strong>\r\n              </li>\r\n            </ul>\r\n            <h3 className=\"font-bold italic mt-2\">Tests:</h3>\r\n            <ul>\r\n              <li>\r\n                Total: <strong className=\"text-3xl\"> {statisticsSearched.tests.total}</strong>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n          <li />\r\n        </ul>\r\n        <div>\r\n          <DayPicker\r\n            selectedDays={selectedDay}\r\n            onDayClick={handleDayClick}\r\n            showOutsideDays \r\n          />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ul className=\"flex-grow  overflow-y-scroll max-h-screen flex flex-col p-2 \">\r\n          {history && history.map((element: IStatistic, index:number)=>(\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <li key={index}>\r\n              <ul className=\"flex gap-4 text-3xl stroke-black text-shadow justify-evenly\">\r\n                <li>Time: <strong className=\"text-3xl\">{element.time.slice(11, element.time.length-6)}</strong></li>\r\n                <li>New: <strong className=\"text-3xl\">{element.cases.new}</strong></li>\r\n                <li>Deaths: <strong className=\"text-3xl\">{element.deaths.new}</strong></li>\r\n              </ul>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      \r\n      <NavigationRoundedIcon\r\n        className=\"fixed bottom-0 left-0 mb-4 ml-4  sm:m-2 border-4 z-50 text-black sm:text-white border-black sm:border-white p-2 cursor-pointer rounded-full\"\r\n        style={{ fontSize: 50 }}\r\n        type=\"button\"\r\n        onClick={()=>{\r\n          window.scrollTo({\r\n            top: 0,\r\n            left: 0,\r\n            behavior: 'smooth'\r\n          });\r\n        }}\r\n      >UP\r\n      </NavigationRoundedIcon>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useContext, useEffect } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete, { AutocompleteRenderInputParams } from '@material-ui/lab/Autocomplete';\r\nimport { CovidContex } from '../contex/CovidContex';\r\nimport CovidCountry from './CovidCountry';\r\nimport { IStatistic } from '../contex/Interfaces';\r\n\r\n\r\nexport default function CovidStatistics() {\r\n  const { statistics, countries, statisticsSearched, fetchData, searchStatistic } = useContext(CovidContex);\r\n  document.title='Covid Statistics';\r\n \r\n  useEffect(()=>{\r\n    countries.length === 0 && \r\n      fetchData('countries', 'countries');\r\n    statistics.length === 0 &&\r\n      fetchData('statistics', 'statistics');\r\n  });\r\n\r\n  const handleSubmit = (e: React.FormEvent ) =>{\r\n    e.preventDefault();\r\n  };\r\n\r\n  const topCountries = statistics.sort((a: IStatistic, b: IStatistic) => (b.cases.new) - (a.cases.new)).slice(0, 5).map((country: IStatistic, index: number)=>{\r\n    return (\r\n      // eslint-disable-next-line react/no-array-index-key\r\n      <li className=\"font-medium flex gap-2 flex-col text-lg border-4 border-black p-2 rounded-lg bg-purple-100 bg-opacity-25 cursor-pointer transform hover:scale-110\" key={index} onClick={()=>{searchStatistic(country.country);}}>\r\n        <h2 className=\"font-bold\">Country: {country.country}</h2>\r\n        <div>\r\n          <h3>Continent: {country.continent}</h3>\r\n          <p className=\"underline\">Cases New: <strong className=\"text-shadow \">{country.cases.new}</strong>\r\n          </p>\r\n          <p>Cases Total: {country.cases.total}</p>\r\n        </div>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  // console.log(statistics);\r\n\r\n  return (\r\n    <section className=\"flex-grow flex flex-col sm:flex-row justify-between covidStatistics_background\">\r\n      <div className=\" sm:w-4/5 flex\">\r\n        {statisticsSearched.length!==0 &&\r\n        <CovidCountry {...statisticsSearched[0]} />}\r\n      </div>\r\n      <div className=\" sm:w-1/5 flex flex-col p-6 sm:mb-0 mb-20 \">\r\n        <form className=\"flex p-2 justify-end sm:justify-center border-4 w-full border-black sm:relative fixed z-20 bottom-0 left-0  bg-gray-400  rounded-lg\" onSubmit={handleSubmit}>\r\n          <Autocomplete\r\n            onChange={(e, newValue) => {\r\n              searchStatistic(newValue);\r\n            }}\r\n            id=\"combo-box-demo\"\r\n            options={countries}\r\n            getOptionLabel={(option: string) => option}\r\n            style={{ width: 300,  }}\r\n            renderInput={(params: AutocompleteRenderInputParams) => <TextField {...params} label=\"Choose country\" variant=\"outlined\" color=\"secondary\" />}\r\n          />\r\n        </form>\r\n        <div className=\"flex flex-col text-center\">\r\n          <h2 className=\"font-merienda text-4xl text-white sm:text-2xl\">Top 5 countries</h2>\r\n          <ul className=\"flex flex-col gap-2\">\r\n            {topCountries}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport './assets/main.css';\nimport { HashRouter,  Route, Switch } from 'react-router-dom';\nimport CovidRules from './components/CovidRules';\nimport Nav from './components/Nav';\nimport { CovidContexProvider } from './contex/CovidContex';\nimport CovidHistory from './components/CovidHistory';\nimport CovidStatistics from './components/CovidStatistics';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Nav />\n      <CovidContexProvider>\n        <Switch>\n          <Route exact path=\"/\" component={CovidRules} />\n          <Route exact path=\"/history\" component={CovidHistory} />\n          <Route exact path=\"/statistics\" component={CovidStatistics} />\n        </Switch>\n      </CovidContexProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}